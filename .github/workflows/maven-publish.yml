# Github Actions Workflow file that builds and pushes the docker images.
name: Maven publish

on:
  release:
    types: [created]

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21 for deploy to github packages
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw install
      - uses: anchore/scan-action/download-grype@v3
        id: grype
      - run: ${{steps.grype.outputs.cmd}} dir:.
  
  publish-job:
    runs-on: ubuntu-latest
    permissions:
      packages: write       
    env:
      GITHUB_TOKEN: ${{ github.token }}
      artifact_name: test-gitaction-workflow
    needs: build_test
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        java-version: '21'
        cache: 'maven'
        distribution: 'temurin'
            
    - name: Get the release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
          
    - name: Update package version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
          
    - name: Publish to GitHub Packages Apache Maven
      #run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      run: mvn deploy -PgithubDeploy
            
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging